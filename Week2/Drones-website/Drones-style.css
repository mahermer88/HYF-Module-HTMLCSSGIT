/* In this stylesheet you will see many css comments lines , which were used befor as grid properties.
The reason is because, it was not mentioned in our homework that is not allowed to use grid.
 So at first day, i finished this stylesheet by using grid and on second day, Rob tell us that is not allowed to use grid in it.*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Adding two new typs of fonts with using @font-face */
@font-face {
  font-family: "Rancho";
  src: url("fonts/Rancho-Regular.ttf") format("woff2");
}
@font-face {
  font-family: "Righteous";
  src: url("fonts/Righteous-Regular.ttf") format("woff2");
}

/* start styling */
body {
  background-image: linear-gradient(
    to right,
    #b66b6b,
    #9cd5da,
    rgb(222, 224, 91)
  );
  font-family: "Rancho";
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Styling the header of page */
header {
  width: 100%;
  padding: 2.5rem;
  background-color: goldenrod;
  border: 5px solid white;
  border-bottom: 20px solid white;
  border-radius: 0em 0em 8% 8%;
  box-shadow: 0px 0px 1rem rgb(7, 7, 7);
  line-height: 5px;
  text-align: center;
  font-family: "Righteous";
  font-size: 40px;
  color: white;
}
h1:hover {
  animation: title-move 5s ease;
}
section {
  max-width: 100%;
  max-height: 100%;
  margin: 10px auto;
  padding: 20px;
}

/* Styling this part with float:
 On desktops (1024px and up): a four column grid, with the exception that the first item spans two columns.
- There should be some margin between the grid items */

#grid-floats {
  /*display: grid;
  grid-template-columns: repeat(4, auto);*/
  float: left;
  list-style: none;
}
#grid-floats .grid-item {
  display: inline-table;
  max-width: 22%;
  height: 800px; /*calc(100vh - 10px);*/
}
#grid-floats .grid-item:first-child {
  /*grid-column: 1 / 3;*/
  max-width: 45%;
}

/* Here some styling properties which could be common for same elements in both parts */
.grid-item {
  margin: 20px 10px;
  padding: 5px;
  border: 25px solid white;
  border-bottom: 100px solid white;
  border-radius: 5px;
  box-shadow: 0.5px 1px 2px rgb(7, 7, 7);
  text-align: center;
}
.grid-item img {
  max-width: 60%;
  margin: 10px auto;
  border: 2px dashed rgb(252, 252, 252);
  border-radius: 10px;
  filter: drop-shadow(0.5px 1px 2px rgb(7, 7, 7));
  transition: transform 2s ease;
}
h2 {
  margin: 5px auto;
  text-align: center;
  font-size: 40px;
  color: #13547a;
  letter-spacing: 10px;
  text-shadow: 5px 1px 5px rgb(247, 255, 135);
}
h3 {
  margin: 1px auto;
  text-align: center;
  font-size: 25px;
  letter-spacing: 0.9px;
  text-shadow: 0.1px 0.1px 2px rgb(255, 255, 255);
 transition: all 2s ease-in-out;
}
h3:hover {
  cursor: pointer;
  transform: scale(1.08);
  border-bottom: 1px solid snow;
  margin: 0 5%;
}
p {
  margin: 20px 0px 1px 1px;
  text-align: initial;
  font-family: hand;
  font-size: 18px;
  /*line-height: 2rem;*/
  text-shadow: 1px 1px 10px white;
}

/*hover states for the grid elements, to indicate to the user that they're looking at that specific drone*/
.grid-item:hover {
  border: 25px solid rgb(240, 201, 102);
  border-bottom: 100px solid rgb(240, 201, 102);
}
.grid-item:hover img {
  transform: translate(10px, 5px) rotate(-10deg);
  border: 2px solid rgb(240, 201, 102);
}

/* Styling the second section using flexbox.:
 On desktops (1024px and up): a four column grid, with the exception that the first item spans two columns.
- There should be some margin between the grid items */

#grid-flex {
  /*display:grid;
  grid-template-columns: repeat(4, auto);*/
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
}
#grid-flex .grid-item {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  flex-grow: 0;
  flex-basis: 22%;
}
#grid-flex .grid-item:first-child {
  /*grid-column: 1 / 3;*/
  flex-basis: 46%;
}

/*Animation using transition*/
@keyframes title-move {
  0% {
    letter-spacing: 100px;
  }
  100% {
    letter-spacing: 10px;
  }
}

/*use media queries for:  mobile phones (smaller than 600px): a one column grid, that spans the full width*/

@media (max-width: 600px) {
  main section {
    padding: 0;
  }
  h2 {
    margin: 0 auto;
    font-size: 20px;
    letter-spacing: 5px;
  }
  #grid-floats .grid-item {
    /*grid-template-columns: 100%;*/
    max-width: 90%;
    height: 400px;
  }
  #grid-floats .grid-item:first-child {
    max-width: 90%;
  }
  #grid-flex .grid-item {
    flex-basis: 90%;
  }
  #grid-flex .grid-item:first-child {
    flex-basis: 90%;
  }
}

/*use media queries for: tablets (between 600px and 1024px): a three column grid,
 with the exception that the first two items span the full width together
  (so first we have two columns, then after the first two items we have three columns)*/

@media (min-width: 600px) and (max-width: 1024px) {
  section {
    padding: 0;
  }
  h2 {
    margin: 1rem auto;
    font-size: 20px;
    letter-spacing: 5px;
  }
  #grid-floats .grid-item {
    /*grid-template-columns: 100%;*/
    max-width: 28%;
    height: 850px;
  }
  #grid-floats .grid-item:first-child {
    max-width: 60%;
  }
  #grid-flex .grid-item {
    flex-basis: 28%;
  }
  #grid-flex .grid-item:first-child {
    flex-basis: 60%;
  }
}

/* It was very useful practice*/
